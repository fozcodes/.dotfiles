set -g default-shell "/opt/homebrew/bin/fish" 
set -g default-command "reattach-to-user-namespace -l /opt/homebrew/bin/fish"

## Recommended from Neovim
set-option -g default-terminal "screen-256color"
set-option -g focus-events on
set-option -sa terminal-overrides ',xterm-256color:RGB'

## Renumber windows when you kill one in the middle by accident
set-option -g renumber-windows on

## Set prefix
unbind C-b
set -g prefix C-s
set -sg escape-time 1

set-option -g status-keys emacs

## Set windows/panes to open in current path
bind c neww -c "#{pane_current_path}"
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

bind S new-session -c "~/Code"
bind s choose-tree -sGO name

## Turn on mouse
set -g mouse on

## Reload config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# This took a _long_ time to figure out, but having these things made it fast again:
# - setting the title of the pane in vim using 
#     vim.opt.title = true
#     vim.opt.titlestring = "nvim"
# - reading that here instead of using the $is_vim stuff
# - running nvim using bash with SHELL='/bin/bash' nvim (set my alias to do this)
# Bind keys to check pane title for Neovim
bind-key -n C-h if-shell '[ "#{pane_title}" = "nvim" ]' 'send-keys C-h' 'select-pane -L'
bind-key -n C-j if-shell '[ "#{pane_title}" = "nvim" ]' 'send-keys C-j' 'select-pane -D'
bind-key -n C-k if-shell '[ "#{pane_title}" = "nvim" ]' 'send-keys C-k' 'select-pane -U'
bind-key -n C-l if-shell '[ "#{pane_title}" = "nvim" ]' 'send-keys C-l' 'select-pane -R'


bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-b' select-pane -l

## Pane resize
bind j resize-pane -D 10
bind k resize-pane -U 10
bind l resize-pane -L 10
bind h resize-pane -R 10

## Status bar config

set-option -g status-style bg=blue
set-option -g status-style fg=default
set-option -g status-left "(#[fg=blue]#S#[default])"
set-option -g status-left-length 100
set-option -g status-justify centre
set -g status-right " #(battery -t) #(date '+%a, %b %d - %I:%M') "

set-option -g window-status-format " #[fg=blue,dim]#I:#{?#{==:#{window_panes},1},,+}#[bold]#{pane_current_command}#[nobold]:#{=|-24|…;s|$HOME|~|:pane_current_path}"
set-option -g window-status-current-format " #[fg=brightmagenta,dim]#I:#[default]#[underscore]#{pane_current_command}#[default]:#{=|-24|…;s|$HOME|~|:pane_current_path}"


##clipboard fix
bind-key -T copy-mode 'y' send -X copy-pipe-and-cancel "pbcopy"

## Scrollback
set-option -g history-limit 20000

## Use vi keys in window
set-window-option -g mode-keys vi
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'Y' send -X copy-end-of-line
bind-key -T copy-mode-vi 'V' send -X select-line

set-environment -g PATH "/opt/homebrew/bin:/usr/local/bin:/bin:/usr/bin"

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'laktak/extrakto'

set -g @extrakto_fzf_tool "fzf"
set -g @extrakto_split_size "15"
set -g @extrakto_clip_tool "xsel --input --clipboard" # works better for nvim
set -g @extrakto_copy_key "tab"      # use tab to copy to clipboard
set -g @extrakto_insert_key "enter"  # use enter to insert selection
set -g @extrakto_fzf_header "i c f g" # for small screens shorten the fzf header

run '/opt/homebrew/opt/tpm/share/tpm/tpm'

set -g @resurrect-strategy-nvim 'session'

set -g @resurrect-save 'C-s'
set -g @resurrect-restore 'C-r'

set -g @continuum-restore 'on'
